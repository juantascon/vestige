http://www.codewitz.net/index.php

However, the main source of difficulty does not seem to be the syntax or understanding of concepts, but rather basic program planning (Rist, R. (1996). Teaching Eiffel as a first language. Journal of Object-Oriented Programming, 9, pp. 30-41.)

Winslow (Soloway, E. & Spohrer, J. (1989). Studying the Novice Programmer, Lawrence
Erlbaum Associates, Hillsdale, New Jersey. 497 p.) noticed that students may know the syntax and semantics
of individual statements, but they do not know how to combine these features into valid programs.

Deek et al. (Davies, S. (1993). Models and theories of programming strategy. International Journal
of Man-Machine Studies, 39, pp. 237-267. ) developed a problem-solving approach for a programming course. In their
approach, language features were introduced to students only in the context to specific problems,
little by little. This was shown to have positive effects on students' course results and their
programming confidence. More discussion on problem-based learning in computer science courses
can be found in Kay et al. (IEEE Learning Technology Standards Committee. Final LOM Draft Standard,
http://ltsc.ieee.org/wg12/20020612-Final-LOM-Draft.html, referenced at 2.12.2003.)

A working group on Improving the Educational Impact of Algorithm Visualization studied
the use of visualizations in computer science education with three surveys and an extensive
literature review. The results of the work are published in Naps et al. (Milne, I., Rowe, G. (2002). Difficulties in Learning and teaching Programming - Views of Students and Tutors, Education and Information Technologies, 7(1), pp. 55-66.)
According to the surveys, all respondents were confident that visualizations help students'
understanding and learning of concepts. Main statement against visualizations was the amount of 
time that is required to create visualizations, to install and study the technology involved, and to
integrate the visualizations to the courses.

There are plenty of typical novice programming errors, many of which are well collected
into the technical report by Pane and Myers ([23] Naps, T.L., Rößling, G., Almstrum, V., Dann, W., Fleischer, R., Hundhausen, C.,
Korhonen, A., Malmi, L., McNally, M., Rodger, S. & Velázquez-Iturbide, J.Á. (2003), Exploring
the role of visualization and engagement in computer science education, SIGCSE Bulletin, 35(2),
pp. 131-152.)

----------------
-- recursion
----------------

Recursion was the only basic programming concept that has several visualization
approached in the literature, e.g. (Elenbogen, B.S., Maxim, B.R. & McDonald, C. (2000). Yet, more Web exercises for
learning C++, Proc. of the 31st SIGCSE Technical Symposium on Computer Science Education SIGCSE Bulletin, pp. 290-294.)
and (Rowe, G., Thorburn, G. (2000). VINCE - an on-line tutorial tool for teaching introductory programming, British Journal of Educational Technology, 31(4), pp. 359-11p.).
In addition, there are many recursion visualizations that work on high level, not showing the actual code.

Several tools have been developed to
generally visualize program execution line-by-line, e.g. Teaching Machine
(Bruce-Lockhart, M. & Norvell, T. (2000). Lifting the hood of the computer: program
animation with the Teaching Machine. Proceedings of the Canadian Conference on Electrical and
Computer Engineering, vol 2, pp. 831-835.), Thetis ([11] Freund, S. & Roberts, E. (1996).
Thetis: an ANSI C programming environment
designed for introductory use. Proc. of the 27th SIGCSE Technical Symposium on Computer
Science Education, pp. 300-304.), and
AnimPascal (Satratzemi, M., Dagdilelis, V. & Evagelidis, G. (2001). SIGCSE
Bulletin, 33(2), pp. 137-140.) with their traditional approach. PlanAni
(Sajaniemi, J. & Kuittinen, M. (2003). Program Animation Based on the Roles of Variables.
Proceedings of the ACM 2003 Symposium on Software Visualization, pp. 7-16.) is an example of a more recent work
with an emphasis on the roles of the variables. However, in this section we concentrate on examples
that have been developed to be used as teaching materials that introduce only few concepts at a
time.
